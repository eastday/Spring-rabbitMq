<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">


    <description>rabbitmq 连接服务配置</description>
    <bean id="configReader" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <!-- 连接配置 -->
    <rabbit:connection-factory id="connectionFactory"
                               host="${mq.host}"
                               username="${mq.username}"
                               password="${mq.password}"
                               port="${mq.port}"
                               virtual-host="${mq.vhost}"/>
    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- spring template 声明
    如方法中不指定exhange则使用这里配置的默认exhange
    -->
    <rabbit:template exchange="directexchange" id="amqpTemplate" connection-factory="connectionFactory"
                     message-converter="jsonMessageConverter"/>


    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>


    <!--  申明一个消息队列Queue   -->
    <!--
        durable:是否持久化
        exclusive: 仅创建者可以使用的私有队列，断开后自动删除
        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
     -->
    第二个参数 durable
    是否持久化，如果true，则此种队列叫持久化队列（Durable queues）。此队列会被存储在磁盘上，当消息代理（broker）重启的时候，它依旧存在。没有被持久化的队列称作暂存队列（Transient queues）。
    第三个参数 execulusive
    表示此对应只能被当前创建的连接使用，而且当连接关闭后队列即被删除。此参考优先级高于durable
    第四个参数 autoDelete
    当没有生成者/消费者使用此队列时，此队列会被自动删除。
    (即当最后一个消费者退订后即被删除)


    <rabbit:queue name="orderDirect"   durable="true" auto-delete="false" exclusive="false"/>
    <rabbit:queue name="activityTopic" durable="true" auto-delete="false" exclusive="false" />
    <rabbit:queue name="mailTopic"  durable="true" auto-delete="false" exclusive="false" />
    <rabbit:queue name="carTopic"  durable="true" auto-delete="false" exclusive="false" />


    <!--
    rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。
    rabbit:binding：设置消息queue匹配的key
     -->
    <rabbit:direct-exchange name="directexchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="orderDirect" key="order"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <!--
     rabbit:topic-exchange：通配符模式
     rabbit:binding pattern: 通配符规则
     通配符绑定eg:A.B.C   * 匹配一个单词，“#”用于匹配多个单词（可以是零个)    -->
    <rabbit:topic-exchange name="topicexchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="mailTopic" pattern="ed.mail.#"></rabbit:binding>
            <rabbit:binding queue="activityTopic" pattern="ed.#"></rabbit:binding>
            <rabbit:binding queue="carTopic" pattern="*.car"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>


    <!-- (发布者订阅者模式) 把所有发送到改Exchange的消息路由到所有与它绑定的Queue中,谁都可以取，直接绑定到该exhange即可(消费者配置)-->
    <rabbit:fanout-exchange name="fanoutexchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="orderDirect"></rabbit:binding>
            <rabbit:binding queue="mailTopic"></rabbit:binding>
            <rabbit:binding queue="activityTopic"></rabbit:binding>
            <rabbit:binding queue="carTopic"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!--<rabbit:headers-exchange name=""></rabbit:headers-exchange>-->



    <!--
        queues：监听的队列，多个的话用逗号（,）分隔
        ref：监听器
     -->
    <!-- 配置监听  acknowledeg = "manual"    设置手动应答  当消息处理失败时:会一直重发  直到消息处理成功
                  acknowledeg = "auto" 自动 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual">
        <!-- 配置监听器 -->
        <rabbit:listener queues="orderDirect" ref="orderListener"/>
        <rabbit:listener queues="activityTopic" ref="activityReceiver"/>
        <rabbit:listener queues="mailTopic" ref="mailReceiver"/>
        <rabbit:listener queues="carTopic" ref="carReceiver"/>
    </rabbit:listener-container>

    <bean id="activityReceiver" class="com.eastday.comsumer.ActivityReceiver"></bean>
    <bean id="mailReceiver" class="com.eastday.comsumer.MailReceiver"></bean>
    <bean id="carReceiver" class="com.eastday.comsumer.CarReceiver"></bean>
</beans>